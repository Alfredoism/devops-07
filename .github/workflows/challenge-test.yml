name: CHALLENGE

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [opened]
    merged: true
     
  workflow_dispatch:
 # Este job se ejecuta solo cuando hay un evento de pull request de la rama develop
jobs:
  scan-and-quality-gate:
    if: github.event_name == 'pull_request' && github.event.action == 'opened' && github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.sonarqube-quality-gate-check.outputs.test }}
    steps:
      - uses: actions/checkout@v4
         
      - name: Analizar con Sonar
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }} 
      
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        env:
           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
           SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}  

      - name: "Example show SonarQube Quality Gate Status value"
        if: failure()
        run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"
    # En caso de fallo cerramos la pull requeste
      - name: Close Pull
        if: failure()
        uses: peter-evans/close-pull@v3
        with:
          pull-request-number: ${{ github.event.number }}
          comment: Auto-closing pull request
          delete-branch: false
   # Este Job se encargar de aprobar la pull-request en caso de pasar las prueba de sonar
  approve-PR:
    needs: scan-and-quality-gate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Approve Pull Request
        uses: juliangruber/approve-pull-request-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.number }}

      - name: Login JIRA
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ vars.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
           
      - name: Create
        id: create
        uses: atlassian/gajira-create@v3
        with:
          project: IDG
          issuetype: "Build"
          summary: "Pendiente de aprobar PullRequest ${{ github.repository }}"
          description: "Compare branch"
          
      - name: Transition issue
        uses: atlassian/gajira-transition@v3
        with:
          issue: ${{ steps.create.outputs.issue }}
          transition: "EN CURSO" 
      
      - name: Log created issue
        run: echo "Issue ${{ steps.create.outputs.issue }} was created"

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif


    # Este job se ejecuta cuando hay un evento de merge de la rama develop a main (Es necesario pasar el Merge branch)
  Deploy-app:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, 'Merge branch')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [15.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install and build
        run: npm install && npm run build
      
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@4.1.1
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: build # The folder the action should deploy.     
     
      - name: Send mail
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          username: ${{secrets.MAIL_USERNAME}}
          password: ${{secrets.MAIL_PASSWORD}}
          subject: Github Actions job result
          to: ivancamachoviveros@gmail.com; agccstarck@gmail.com; jorgesago@gmail.com
          from: Luke Skywalker # <user@example.com>
          body: Build job of ${{github.repository}} completed successfully! Brixton
 
      
      

  
